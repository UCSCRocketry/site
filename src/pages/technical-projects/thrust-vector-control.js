import '../projects.css';
import splashImage from "../../media/thrust-vector-control/IMG_1667.png"
import SideNavigation from "../../components/sideNavigation";
import Skill from "../../components/skill";

function ThrustVectorControl() {
    return (
        <section>
            <section className="splashImage">
                <img src={splashImage} className="backgroundImage"/>
                <div className="overlay"></div>
                <section className="contentContainer">
                    <h2>Thrust Vector Control</h2>
                    <h4>Technical Project</h4>
                </section>
            </section>
            <section className="contentContainer">
                <div className="flexContainer g30">
                    <SideNavigation/>
                    <div className="textContainer">
                        <h6>Overview</h6>
                        <p>
                            The TVC Project is aimed at enhancing the maneuverability and stability of Vertical Takeoff
                            Vertical Landing (VTVL) rockets during flight. Thrust vector control involves the precise
                            manipulation of the direction of thrust generated by the rocket engine, allowing for greater
                            control over the vehicleâ€™s trajectory without the need for aerodynamic surfaces like fins.
                            We focus on developing cutting-edge systems that can adjust the engine nozzle or redirect
                            exhaust flow using actuators and gimbals to enable real-time course corrections, improve
                            payload delivery accuracy, and ensure safe re-entry and landing.
                        </p>
                        <p>
                            Subteams of the project include Guidance Navigation and Control (GNC) which entails
                            mechanical design, simulations, electronics, and embedded systems to maneuver the rocket
                            and adjust its trajectory. We deal with control algorithms such as PID and LQR/LQM for
                            active stabilization.
                        </p>
                        <p>
                            Our other subteam is Computer Vision (CV), which goals include utilizing on-board live
                            footage into openCV to create a map of the site. The footage is then put into a Machine
                            Learning program (utilizing YOLO), to select the best position the rocket should land in.
                            It will then send a vector to the GNC side of the rocket, adjusting its trajectory to
                            self-land in the most optimal spot.
                        </p>
                        <p>
                            As a first-of-its-kind general-purpose avionics platform, Blaze was created with modularity
                            and
                            mission adaptability in mind, ensuring it meets the demands of varied rocketry applications.
                            Whether
                            for academic exploration, rigorous field testing, or personal projects, Blaze is equipped to
                            handle
                            diverse mission profiles, making advanced rocketry avionics more accessible than ever.
                        </p>
                    </div>
                </div>
                <section className="skills">
                    <h3>Skills used</h3>
                    <section className="row g10">
                        <Skill name="Computer Aid Design"/>
                        <Skill name="Machine Learning"/>
                        <Skill name="PID Control"/>
                        <Skill name="Photogrammetery"/>
                        <Skill name="OpenCV"/>
                        <Skill name="Pytorch"/>
                        <Skill name="Coppeliasim"/>
                    </section>
                </section>
            </section>
        </section>
    )
}

export default ThrustVectorControl;